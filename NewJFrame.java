/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.io.*;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.filechooser.FileNameExtensionFilter;
import geometryproject.*;
import graphics2D.PlotCanvas;
import static graphics2D.PlotCanvas.plot;

import java.awt.BorderLayout;
import java.awt.Canvas;
import graphics3D.*;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.Graphics;
import static java.lang.Double.parseDouble;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import java.util.*;
/**
 *
 * @author antho
 */
public class NewJFrame extends javax.swing.JFrame {

    protected ArrayList geomsList = new ArrayList();
    protected File file = null;

    String textInput1;
    String textInput2;

    int n;

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();
        fileRadius = new javax.swing.JLabel();
        fileHeight = new javax.swing.JLabel();
        fileLength = new javax.swing.JLabel();
        shapeField = new javax.swing.JTextField();
        radiusField = new javax.swing.JTextField();
        heightField = new javax.swing.JTextField();
        typeShape = new javax.swing.JLabel();
        lengthField = new javax.swing.JTextField();
        fileWidth = new javax.swing.JLabel();
        widthField = new javax.swing.JTextField();
        buildButton = new javax.swing.JButton();
        fileThickness = new javax.swing.JLabel();
        thicknessField = new javax.swing.JTextField();
        fileName = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        textarea = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        errorText = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        xField = new javax.swing.JTextField();
        yField = new javax.swing.JTextField();
        zField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        fileNew = new javax.swing.JMenuItem();
        fileOpen = new javax.swing.JMenuItem();
        fileSave = new javax.swing.JMenuItem();
        fileSaveAs = new javax.swing.JMenuItem();
        fileExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        fileCircle = new javax.swing.JMenuItem();
        fileSquare = new javax.swing.JMenuItem();
        fileRectangle = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        fileCube = new javax.swing.JMenuItem();
        fileCone = new javax.swing.JMenuItem();
        fileSphere = new javax.swing.JMenuItem();
        fileCylinder = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(62, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        fileRadius.setText("Radius");

        fileHeight.setText("Height");

        fileLength.setText("Length");

        typeShape.setText("Type");

        fileWidth.setText("Width");

        buildButton.setText("Build");
        buildButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buildButtonActionPerformed(evt);
            }
        });

        fileThickness.setText("Thickness");

        fileName.setText("Name");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fileLength)
                            .addComponent(fileRadius)
                            .addComponent(fileHeight)
                            .addComponent(typeShape)
                            .addComponent(fileWidth))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(shapeField, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                            .addComponent(radiusField)
                            .addComponent(lengthField)
                            .addComponent(heightField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(widthField, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fileName)
                            .addComponent(fileThickness))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(thicknessField, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                            .addComponent(jTextField1))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(buildButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(typeShape, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(shapeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileRadius)
                    .addComponent(radiusField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileHeight)
                    .addComponent(heightField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileLength, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lengthField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileWidth)
                    .addComponent(widthField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fileThickness)
                    .addComponent(thicknessField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileName)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(buildButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        textarea.setColumns(20);
        textarea.setRows(5);
        jScrollPane2.setViewportView(textarea);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Shape", "Name", "Area", "Volume"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        errorText.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(228, 228, 228)
                        .addComponent(errorText, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(errorText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("x");

        jLabel2.setText("y");

        jLabel3.setText("z");

        xField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xFieldActionPerformed(evt);
            }
        });

        yField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(xField))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(yField))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(zField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(xField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(yField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(zField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );

        jButton1.setText("Clear List");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Delete Item");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        fileNew.setText("New");
        fileNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileNewActionPerformed(evt);
            }
        });
        jMenu1.add(fileNew);

        fileOpen.setText("Open");
        fileOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileOpenActionPerformed(evt);
            }
        });
        jMenu1.add(fileOpen);

        fileSave.setText("Save");
        fileSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileSaveActionPerformed(evt);
            }
        });
        jMenu1.add(fileSave);

        fileSaveAs.setText("Save As");
        fileSaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileSaveAsActionPerformed(evt);
            }
        });
        jMenu1.add(fileSaveAs);

        fileExit.setText("Exit");
        fileExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileExitActionPerformed(evt);
            }
        });
        jMenu1.add(fileExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem2.setText("Sort by Volume");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("2D Shapes");
        jMenu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu3ActionPerformed(evt);
            }
        });

        fileCircle.setText("Circle");
        fileCircle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileCircleActionPerformed(evt);
            }
        });
        jMenu3.add(fileCircle);

        fileSquare.setText("Square");
        fileSquare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileSquareActionPerformed(evt);
            }
        });
        jMenu3.add(fileSquare);

        fileRectangle.setText("Rectangle");
        fileRectangle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileRectangleActionPerformed(evt);
            }
        });
        jMenu3.add(fileRectangle);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("3D Shapes");

        fileCube.setText("Cube");
        fileCube.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileCubeActionPerformed(evt);
            }
        });
        jMenu4.add(fileCube);

        fileCone.setText("Cone");
        fileCone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileConeActionPerformed(evt);
            }
        });
        jMenu4.add(fileCone);

        fileSphere.setText("Sphere");
        fileSphere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileSphereActionPerformed(evt);
            }
        });
        jMenu4.add(fileSphere);

        fileCylinder.setText("Cylinder");
        fileCylinder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileCylinderActionPerformed(evt);
            }
        });
        jMenu4.add(fileCylinder);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)
                        .addGap(6, 6, 6)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 142, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fileExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_fileExitActionPerformed

    private void fileOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileOpenActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new File("."));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
        chooser.setFileFilter(filter);
        int result = chooser.showOpenDialog(NewJFrame.this);
        if (result == JFileChooser.APPROVE_OPTION) {
            file = chooser.getSelectedFile();
            int ln = 0;//line number
            try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
                String line;
                while ((line = reader.readLine()) != null) {
                    String name = line.trim();//read geometry name
                    switch (name) {
                        case "Circle":
                            Geom circle = new Circle();
                            circle.read(reader);
                            geomsList.add(circle);
                            break;
                        case "Cube":
                            Geom cube = new Cube();
                            cube.read(reader);
                            geomsList.add(cube);
                            break;
                        case "Cylinder":
                            Geom cylinder = new Cylinder();
                            cylinder.read(reader);
                            geomsList.add(cylinder);
                            break;
                        case "Rectangle":
                            Geom rectangle = new Rectangle();
                            rectangle.read(reader);
                            geomsList.add(rectangle);
                            break;
                        case "Sphere":
                            Geom sphere = new Sphere();
                            sphere.read(reader);
                            geomsList.add(sphere);
                            break;
                        case "Square":
                            Geom square = new Square();
                            square.read(reader);
                            geomsList.add(square);
                            break;
                        default:
                            System.out.println("Unknown geometry in line: " + ln);
                            reader.readLine(); // skip a line
                        }
                    ln += 2;
                }
                
                updateList();
                updateTable();

                for (Object geom : geomsList) {
                    Geom geometry = (Geom) geom;
                    textarea.append(geometry.toString() + "\n");
                }
            } catch (FileNotFoundException e) {
                System.out.println("Cannot find the file：" + e.getMessage());
            } catch (IOException ex) {
                System.out.println("Error message" + ex.getMessage());
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_fileOpenActionPerformed

    private void fileSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileSaveActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new File("."));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
        chooser.setFileFilter(filter);
        if (file == null) {
            int result = chooser.showSaveDialog(this);
            if (result == JFileChooser.APPROVE_OPTION) {
                file = chooser.getSelectedFile();
            }
        }
        try (PrintWriter pw = new PrintWriter(new FileWriter(file.getAbsoluteFile()))) {
            for (Object geom : geomsList) {
                Geom geometry = (Geom) geom;
                String content = geometry.getName() + "\n";
                content = content + geometry.getParameters() + "\n";
                pw.write(content);
            }
        } catch (FileNotFoundException e) {
            System.out.println("Cannot find the file：" + e.getMessage());
        } catch (IOException e) {
            System.out.println("Error message" + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_fileSaveActionPerformed

    private void fileSaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileSaveAsActionPerformed
        File old = file;
        file = null;
        fileSaveActionPerformed(evt);
        if (file == null) {
            file = old;
        }    }//GEN-LAST:event_fileSaveAsActionPerformed

    private void fileRectangleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileRectangleActionPerformed
        shapeField.setText(fileRectangle.getText());
        fileRadius.setEnabled(false);
        fileHeight.setEnabled(true);
        fileLength.setEnabled(false);
        fileWidth.setEnabled(true);
        fileThickness.setEnabled(false);
        radiusField.setEnabled(false);
        heightField.setEnabled(true);
        lengthField.setEnabled(false);
        widthField.setEnabled(true);
        thicknessField.setEnabled(false);
        clearTextField();

    }//GEN-LAST:event_fileRectangleActionPerformed

    private void fileCircleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileCircleActionPerformed
        shapeField.setText(fileCircle.getText());
        fileRadius.setEnabled(true);
        fileHeight.setEnabled(false);
        fileLength.setEnabled(false);
        fileWidth.setEnabled(false);
        fileThickness.setEnabled(false);
        radiusField.setEnabled(true);
        heightField.setEnabled(false);
        lengthField.setEnabled(false);
        widthField.setEnabled(false);
        thicknessField.setEnabled(false);
        clearTextField();
    }//GEN-LAST:event_fileCircleActionPerformed

    private void fileNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileNewActionPerformed
        textarea.setText(null);
        geomsList.clear();
        file = null;
       
    }//GEN-LAST:event_fileNewActionPerformed

    private void jMenu3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu3ActionPerformed

    private void buildButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buildButtonActionPerformed
        //REFLECTION CODE
        String shape = shapeField.getText();
        String shapeName = jTextField1.getText();
         
        switch (shape) {
            case "Circle":
                textInput1 = radiusField.getText();
                textInput2 = "0.0";
                break;
            case "Cube":
                textInput1 = lengthField.getText();
                textInput2 = "0.0";
                break;
            case "Cylinder":
                textInput1 = radiusField.getText();
                textInput2 = heightField.getText();
                break;
            case "Rectangle":
                textInput1 = heightField.getText();
                textInput2 = widthField.getText();
                break;
            case "Sphere":
                textInput1 = radiusField.getText();
                textInput2 = "0.0";
                break;
            case "Square":
                textInput1 = lengthField.getText();
                textInput2 = "0.0";
                break;
            case "Cone":
                textInput1 = radiusField.getText();
                textInput2 = heightField.getText();
                break;    
            default:
        }
        try {
            Class c1 = Class.forName("geometryproject." + shape);
            Constructor constructor = c1.getConstructor(String.class, double.class, double.class);
            Geom obj;
            obj = (Geom) constructor.newInstance(shapeName, Double.parseDouble(textInput1), Double.parseDouble(textInput2));
            geomsList.add(obj);
            

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NoSuchMethodException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SecurityException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalArgumentException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InvocationTargetException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        n = geomsList.size()-1;
        updateTable();
        updateList();
        clearTextField();
        
       if (!geomsList.isEmpty() && ((Geom) geomsList.get(n)) instanceof Geom2D){
          plot2D(n);
       } else if (!geomsList.isEmpty() && ((Geom) geomsList.get(n)) instanceof Geom3D){
          plot3D((Geom) geomsList.get(n));
    }
        
     
 

    }//GEN-LAST:event_buildButtonActionPerformed

    private void fileSphereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileSphereActionPerformed
        shapeField.setText(fileSphere.getText());
        fileRadius.setEnabled(true);
        fileHeight.setEnabled(true);
        fileLength.setEnabled(true);
        fileWidth.setEnabled(true);
        fileThickness.setEnabled(false);
        radiusField.setEnabled(true);
        heightField.setEnabled(false);
        lengthField.setEnabled(false);
        widthField.setEnabled(false);
        thicknessField.setEnabled(false);
        clearTextField();

    }//GEN-LAST:event_fileSphereActionPerformed

    private void fileSquareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileSquareActionPerformed
        shapeField.setText(fileSquare.getText());
        fileRadius.setEnabled(false);
        fileHeight.setEnabled(false);
        fileLength.setEnabled(true);
        fileWidth.setEnabled(false);
        fileThickness.setEnabled(false);
        radiusField.setEnabled(false);
        heightField.setEnabled(false);
        lengthField.setEnabled(true);
        widthField.setEnabled(false);
        thicknessField.setEnabled(false);
        clearTextField();
            }//GEN-LAST:event_fileSquareActionPerformed

    private void fileCylinderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileCylinderActionPerformed
        shapeField.setText(fileCylinder.getText());
        fileRadius.setEnabled(true);
        fileHeight.setEnabled(true);
        fileLength.setEnabled(false);
        fileWidth.setEnabled(false);
        fileThickness.setEnabled(false);
        radiusField.setEnabled(true);
        heightField.setEnabled(true);
        lengthField.setEnabled(false);
        widthField.setEnabled(false);
        thicknessField.setEnabled(false);
        clearTextField();
    }//GEN-LAST:event_fileCylinderActionPerformed

    private void fileCubeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileCubeActionPerformed
        shapeField.setText(fileCube.getText());
        fileRadius.setEnabled(false);
        fileHeight.setEnabled(false);
        fileLength.setEnabled(true);
        fileWidth.setEnabled(false);
        fileThickness.setEnabled(false);
        radiusField.setEnabled(false);
        heightField.setEnabled(false);
        lengthField.setEnabled(true);
        widthField.setEnabled(false);
        thicknessField.setEnabled(false);
        clearTextField();

    }//GEN-LAST:event_fileCubeActionPerformed

    private void fileConeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileConeActionPerformed
        shapeField.setText(fileCone.getText());
        fileRadius.setEnabled(true);
        fileHeight.setEnabled(true);
        fileLength.setEnabled(false);
        fileWidth.setEnabled(false);
        fileThickness.setEnabled(false);
        radiusField.setEnabled(true);
        heightField.setEnabled(true);
        lengthField.setEnabled(false);
        widthField.setEnabled(false);
        thicknessField.setEnabled(false);
        clearTextField();
    }//GEN-LAST:event_fileConeActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        clearTextField();
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
                Collections.sort(geomsList, new VolumeSorting()); 
        updateList();
        updateTable();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void yFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yFieldActionPerformed

    private void xFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xFieldActionPerformed
     
    }//GEN-LAST:event_xFieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DefaultListModel listModel = (DefaultListModel) jList1.getModel();
        listModel.removeAllElements();
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        geomsList.clear();
        jPanel3.removeAll();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int item = jList1.getSelectedIndex();
        geomsList.remove(item);
        updateList();
        updateTable();
    }//GEN-LAST:event_jButton2ActionPerformed
    public void clearTextField() {
        radiusField.setText(null);
        heightField.setText(null);
        lengthField.setText(null);
        widthField.setText(null);
        thicknessField.setText(null);
        jTextField1.setText(null);
    }

    /**
     * @param args the command line arguments
     */
    private void updateList() {

        DefaultListModel listModel = new DefaultListModel();

        for (int i = 0; i < geomsList.size(); i++) {
            listModel.addElement(((Geom) (geomsList.get(i))).getName());
        }
        jList1.setModel(listModel);
    }

    private void updateTable() {

        Object[][] data = new String[geomsList.size()][4];
        for (int i = 0; i < geomsList.size(); i++) {
            data[i][0] = ((Geom) geomsList.get(i)).getShape();
            data[i][1] = ((Geom) geomsList.get(i)).getName();
            data[i][2] = String.valueOf(((Geom) geomsList.get(i)).computeArea());
            data[i][3] = String.valueOf(((Geom) geomsList.get(i)).computeVolume());
        }
        Object[] colNames = {"Type", "Name", "Area", "Volume"};
        DefaultTableModel model = new DefaultTableModel(data, colNames);
        jTable1.setModel(model);
        
    }
    
   public boolean checkName(String name) {
        boolean flag = false;
        if (name.equals("")) {
            errorText.setText("Name Required. Try Again.");
            flag = true;
        }
        return flag;
   }
        
    public void clickedShapeHello(int i) {
        jPanel3.removeAll();
        JMGraphics app = new JMGraphics((Geom) geomsList.get(i));
        app.cnvs.setSize(jPanel3.getSize());
        jPanel3.add(app.cnvs);
        jPanel3.setVisible(true);

    }

    
    
    public void plot2D(int i) {
        jPanel3.removeAll();
        Canvas canvas = new MyCanvas(geomsList, i);
        canvas.setSize(jPanel3.getSize());
        jPanel3.add(canvas);

        jPanel3.setVisible(true);

    }

    public void plot3D(Geom shape) {
        jPanel3.removeAll();
        JMGraphics app = new JMGraphics(shape);
        app.cnvs.setSize(jPanel3.getSize());
        jPanel3.add(app.cnvs);
        jPanel3.setVisible(true);

    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NewJFrame frame = new NewJFrame();
                frame.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent evt) {
                        System.exit(0);
                    }

                });

                new NewJFrame().setVisible(true);
            }
        }
        );
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buildButton;
    private javax.swing.JTextField errorText;
    private javax.swing.JMenuItem fileCircle;
    private javax.swing.JMenuItem fileCone;
    private javax.swing.JMenuItem fileCube;
    private javax.swing.JMenuItem fileCylinder;
    private javax.swing.JMenuItem fileExit;
    private javax.swing.JLabel fileHeight;
    private javax.swing.JLabel fileLength;
    private javax.swing.JLabel fileName;
    private javax.swing.JMenuItem fileNew;
    private javax.swing.JMenuItem fileOpen;
    private javax.swing.JLabel fileRadius;
    private javax.swing.JMenuItem fileRectangle;
    private javax.swing.JMenuItem fileSave;
    private javax.swing.JMenuItem fileSaveAs;
    private javax.swing.JMenuItem fileSphere;
    private javax.swing.JMenuItem fileSquare;
    private javax.swing.JLabel fileThickness;
    private javax.swing.JLabel fileWidth;
    private javax.swing.JTextField heightField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField lengthField;
    private javax.swing.JTextField radiusField;
    private javax.swing.JTextField shapeField;
    private javax.swing.JTextArea textarea;
    private javax.swing.JTextField thicknessField;
    private javax.swing.JLabel typeShape;
    private javax.swing.JTextField widthField;
    private javax.swing.JTextField xField;
    private javax.swing.JTextField yField;
    private javax.swing.JTextField zField;
    // End of variables declaration//GEN-END:variables
}
